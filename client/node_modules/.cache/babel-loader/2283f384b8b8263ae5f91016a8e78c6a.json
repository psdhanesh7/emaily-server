{"ast":null,"code":"var _jsxFileName = \"/home/dhanesh/Documents/flipr_email/src/components/Home/Home.js\";\nimport React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  const mail = [{\n    from: \"from@gmail.com\",\n    to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"weekly\",\n    count: 0,\n    schedule: {\n      day: \"Saturday\",\n      time: \"19:29:00\"\n    }\n  }, {\n    from: \"from@gmail.com\",\n    to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"monthly\",\n    count: 0,\n    schedule: {\n      date: \"26\",\n      time: \"19:37:00\"\n    }\n  }, {\n    from: \"from@gmail.com\",\n    to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"yearly\",\n    count: 0,\n    schedule: {\n      date: \"26\",\n      month: \"6\",\n      time: \"19:41:00\"\n    }\n  }]; //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const home_mail = mail.filter((data, index) => data.count == 0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To be sent on\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mail.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.to\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: data.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: (() => {\n              if (data.type == \"weekly\") {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [data.schedule.day, \",  \", data.schedule.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this);\n              } else if (data.type == \"monthly\") {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [data.schedule.date, \",  \", data.schedule.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [data.schedule.date, \"/\", data.schedule.month, \",  \", data.schedule.time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 23\n                }, this);\n              }\n            })()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/dhanesh/Documents/flipr_email/src/components/Home/Home.js"],"names":["React","useState","Table","Home","mail","from","to","subject","body","type","count","schedule","day","time","date","month","map","data","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./Home.css\";\nexport default function Home() {\n  const mail = [\n    {\n      from: \"from@gmail.com\",\n      to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"weekly\",\n      count: 0,\n      schedule: {\n        day: \"Saturday\",\n        time: \"19:29:00\",\n      },\n    },\n    {\n      from: \"from@gmail.com\",\n      to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"monthly\",\n      count: 0,\n      schedule: {\n        date: \"26\",\n        time: \"19:37:00\",\n      },\n    },\n    {\n      from: \"from@gmail.com\",\n      to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"yearly\",\n      count: 0,\n      schedule: {\n        date: \"26\",\n        month: \"6\",\n        time: \"19:41:00\",\n      },\n    },\n  ];\n\n  //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const home_mail = mail.filter((data, index) => data.count == 0);\n\n  return (\n    <div className=\"container-fluid\">\n      <h2 className=\"heading\">Home</h2>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>To</th>\n            <th>Subject</th>\n            <th></th>\n            <th></th>\n            <th>To be sent on</th>\n          </tr>\n        </thead>\n        <tbody>\n          {mail.map((data, index) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{data.to}</td>\n              <td colSpan=\"3\">{data.subject}</td>\n              <td>\n                {(() => {\n                  if (data.type == \"weekly\") {\n                    return (\n                      <div>\n                        {data.schedule.day}\n                        {\",  \"}\n                        {data.schedule.time}\n                      </div>\n                    );\n                  } else if (data.type == \"monthly\") {\n                    return (\n                      <div>\n                        {data.schedule.date}\n                        {\",  \"}\n                        {data.schedule.time}\n                      </div>\n                    );\n                  } else {\n                    return (\n                      <div>\n                        {data.schedule.date}\n                        {\"/\"}\n                        {data.schedule.month}\n                        {\",  \"}\n                        {data.schedule.time}\n                      </div>\n                    );\n                  }\n                })()}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}