{"ast":null,"code":"var _jsxFileName = \"/home/dhanesh/Documents/flipr_email/src/components/History/History.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./History.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function History() {\n  _s();\n\n  const [mails, setMails] = useState([]);\n  useEffect(async () => {\n    const res = await axios({\n      method: 'GET',\n      url: 'http://localhost:3000/api/emails/history',\n      headers: {\n        authorization: `BEARER ${token}`\n      }\n    });\n    console.log(res.data);\n\n    if (res.data.success) {\n      setMails(res.data.emails);\n    }\n  }, []); // const mail = [\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"weekly\",\n  //     count: 1,\n  //   },\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"monthly\",\n  //     count: 1,\n  //   },\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"yearly\",\n  //     count: 1,\n  //   },\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"recurring\",\n  //     count: 10,\n  //   },\n  // ];\n  //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const history_mail = mail.filter((data, index) => data.count > 0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mails.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.recipients[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: data.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.sentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(History, \"9hZ1vw+cDcIv2eNhao+ZvUfcYDc=\");\n\n_c = History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["/home/dhanesh/Documents/flipr_email/src/components/History/History.js"],"names":["React","useState","useEffect","Table","History","mails","setMails","res","axios","method","url","headers","authorization","token","console","log","data","success","emails","map","index","recipients","subject","sentDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAO,eAAP;;AACA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAEhC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC;AACtBC,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,GAAG,EAAE,0CAFiB;AAGtBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,KAAM;AADxB;AAHa,KAAD,CAAvB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACS,IAAhB;;AACA,QAAGT,GAAG,CAACS,IAAJ,CAASC,OAAZ,EAAqB;AACnBX,MAAAA,QAAQ,CAACC,GAAG,CAACS,IAAJ,CAASE,MAAV,CAAR;AACD;AACF,GAZQ,EAYN,EAZM,CAAT,CAJgC,CAmBhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBACGb,KAAK,CAACc,GAAN,CAAU,CAACH,IAAD,EAAOI,KAAP,kBACT;AAAA,kCACE;AAAA,sBAAKA,KAAK,GAAG;AAAb;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKJ,IAAI,CAACK,UAAL,CAAgB,CAAhB;AAAL;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,OAAO,EAAC,GAAZ;AAAA,sBAAiBL,IAAI,CAACM;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBAAKN,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASH,KAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7FuBhB,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./History.css\";\nexport default function History() {\n\n  const [mails, setMails] = useState([]);\n\n  useEffect(async () => {\n    const res = await axios({\n      method: 'GET',\n      url: 'http://localhost:3000/api/emails/history',\n      headers: {\n        authorization: `BEARER ${token}`\n      }\n    });\n    console.log(res.data);\n    if(res.data.success) {\n      setMails(res.data.emails)\n    }\n  }, [])\n\n\n  // const mail = [\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"weekly\",\n  //     count: 1,\n  //   },\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"monthly\",\n  //     count: 1,\n  //   },\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"yearly\",\n  //     count: 1,\n  //   },\n  //   {\n  //     from: \"from@gmail.com\",\n  //     to: \"to@gmail.com, cc1@gmail.com, cc2@gmail.com\",\n  //     sentDate: \"December 17, 2020 03:24:00\",\n  //     subject:\n  //       \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n  //     body: \"Body of mail\",\n  //     type: \"recurring\",\n  //     count: 10,\n  //   },\n  // ];\n\n  //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const history_mail = mail.filter((data, index) => data.count > 0);\n  \n  return (\n    <div className=\"container-fluid\">\n      <h2 className=\"heading\">History</h2>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>To</th>\n            <th>Subject</th>\n            <th></th>\n            <th></th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {mails.map((data, index) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>{data.recipients[0]}</td>\n              <td colSpan=\"3\">{data.subject}</td>\n              <td>{data.sentDate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}