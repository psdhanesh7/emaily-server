{"ast":null,"code":"var _jsxFileName = \"/home/dhanesh/Documents/flipr_email/src/components/History/History.js\";\nimport React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./History.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function History() {\n  const mail = [{\n    from: \"from@gmail.com\",\n    recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n    sentDate: \"December 17, 2020 03:24:00\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"weekly\",\n    count: 1\n  }, {\n    from: \"from@gmail.com\",\n    recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n    sentDate: \"December 17, 2020 03:24:00\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"monthly\",\n    count: 1\n  }, {\n    from: \"from@gmail.com\",\n    recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n    sentDate: \"December 17, 2020 03:24:00\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"yearly\",\n    count: 1\n  }, {\n    from: \"from@gmail.com\",\n    recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n    sentDate: \"December 17, 2020 03:24:00\",\n    subject: \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"recurring\",\n    count: 10\n  }]; //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const history_mail = mail.filter((data, index) => data.count > 0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: mail.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.recipients.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [data, \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: data.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.sentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_c = History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["/home/dhanesh/Documents/flipr_email/src/components/History/History.js"],"names":["React","useState","Table","History","mail","from","recipients","sentDate","subject","body","type","count","map","data","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./History.css\";\nexport default function History() {\n  const mail = [\n    {\n      from: \"from@gmail.com\",\n      recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n      sentDate: \"December 17, 2020 03:24:00\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"weekly\",\n      count: 1,\n    },\n    {\n      from: \"from@gmail.com\",\n      recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n      sentDate: \"December 17, 2020 03:24:00\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"monthly\",\n      count: 1,\n    },\n    {\n      from: \"from@gmail.com\",\n      recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n      sentDate: \"December 17, 2020 03:24:00\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"yearly\",\n      count: 1,\n    },\n    {\n      from: \"from@gmail.com\",\n      recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n      sentDate: \"December 17, 2020 03:24:00\",\n      subject:\n        \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n      body: \"Body of mail\",\n      type: \"recurring\",\n      count: 10,\n    },\n  ];\n\n  //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const history_mail = mail.filter((data, index) => data.count > 0);\n\n  return (\n    <div className=\"container-fluid\">\n      <h2 className=\"heading\">History</h2>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>To</th>\n            <th>Subject</th>\n            <th></th>\n            <th></th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {mail.map((data, index) => (\n            <tr key={index}>\n              <td>{index + 1}</td>\n              <td>\n                {data.recipients.map((data, index) => (\n                  <div key={index}>{data} </div>\n                ))}\n              </td>\n              <td colSpan=\"3\">{data.subject}</td>\n              <td>{data.sentDate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}