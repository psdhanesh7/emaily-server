[{"/home/dhanesh/Documents/emaily-server/client/src/index.js":"1","/home/dhanesh/Documents/emaily-server/client/src/App.js":"2","/home/dhanesh/Documents/emaily-server/client/src/reportWebVitals.js":"3","/home/dhanesh/Documents/emaily-server/client/src/components/Login/Login.js":"4","/home/dhanesh/Documents/emaily-server/client/src/components/Navigationbar/Navigationbar.js":"5","/home/dhanesh/Documents/emaily-server/client/src/components/History/SelectedMailHistory/SelectedMailHistory.js":"6","/home/dhanesh/Documents/emaily-server/client/src/components/History/History.js":"7","/home/dhanesh/Documents/emaily-server/client/src/components/Home/Home.js":"8","/home/dhanesh/Documents/emaily-server/client/src/components/Home/SelectedMailHome/SelectedMailHome.js":"9","/home/dhanesh/Documents/emaily-server/client/src/components/Links/Links.js":"10","/home/dhanesh/Documents/emaily-server/client/src/components/Profile/Profile.js":"11","/home/dhanesh/Documents/emaily-server/client/src/components/Compose/Compose.js":"12","/home/dhanesh/Documents/emaily-server/client/src/components/Compose/AlertSuccess/AlertSuccess.js":"13","/home/dhanesh/Documents/emaily-server/client/src/components/Compose/AlertFailure/AlertFailure.js":"14"},{"size":550,"mtime":1624812731905,"results":"15","hashOfConfig":"16"},{"size":1424,"mtime":1624812731901,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1624812731905,"results":"18","hashOfConfig":"16"},{"size":4833,"mtime":1624815106884,"results":"19","hashOfConfig":"16"},{"size":905,"mtime":1624812731905,"results":"20","hashOfConfig":"16"},{"size":2001,"mtime":1624812731901,"results":"21","hashOfConfig":"16"},{"size":1412,"mtime":1624813193458,"results":"22","hashOfConfig":"16"},{"size":2607,"mtime":1624813229698,"results":"23","hashOfConfig":"16"},{"size":2175,"mtime":1624812731901,"results":"24","hashOfConfig":"16"},{"size":1907,"mtime":1624812731901,"results":"25","hashOfConfig":"16"},{"size":138,"mtime":1624812731905,"results":"26","hashOfConfig":"16"},{"size":8571,"mtime":1624813218466,"results":"27","hashOfConfig":"16"},{"size":412,"mtime":1624812731901,"results":"28","hashOfConfig":"16"},{"size":421,"mtime":1624812731901,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1aedvr0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dhanesh/Documents/emaily-server/client/src/index.js",[],"/home/dhanesh/Documents/emaily-server/client/src/App.js",["64","65","66","67","68","69","70","71","72","73","74"],"import { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport SelectedMailHome from \"./components/Home/SelectedMailHome/SelectedMailHome\";\nimport Navigationbar from \"./components/Navigationbar/Navigationbar\";\nimport SelectedMailHistory from \"./components/History/SelectedMailHistory/SelectedMailHistory\";\nimport History from \"./components/History/History\";\nimport Home from \"./components/Home/Home\";\nimport Compose from \"./components/Compose/Compose\";\nimport Profile from \"./components/Profile/Profile\"\nimport { useState } from \"react\";\nimport Links from './components/Links/Links'\n\nfunction App(props) {\n  \n  return (\n    <div className=\"App\">\n        <Links/>\n      {/* <Router>\n        <Route \n          path='/'\n          exact\n          render={(props) => (\n            <Login />\n          )}\n        />\n        <Route \n          path='/home'\n          render={(props) => (\n            <Home {...props} token={localStorage.getItem('token')} />\n          )}\n        />\n        <Route\n          path='/history'\n          render={(props)=>{\n            <History {...props} token={localStorage.getItem('token')} />\n          }}\n        />\n        <Route\n          path='/compose'\n          render={(props)=>{\n            <Compose {...props} token={localStorage.getItem('token')} />\n          }}\n        />\n      </Router> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/dhanesh/Documents/emaily-server/client/src/reportWebVitals.js",[],"/home/dhanesh/Documents/emaily-server/client/src/components/Login/Login.js",["75","76"],"/home/dhanesh/Documents/emaily-server/client/src/components/Navigationbar/Navigationbar.js",[],"/home/dhanesh/Documents/emaily-server/client/src/components/History/SelectedMailHistory/SelectedMailHistory.js",[],"/home/dhanesh/Documents/emaily-server/client/src/components/History/History.js",["77","78"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { Table } from \"react-bootstrap\";\nimport \"./History.css\";\nimport Nav from '../Navigationbar/Navigationbar'\n\nexport default function History({ token }) {\n\n  const [mails, setMails] = useState([]);\n\n  useEffect(async () => {\n    const res = await axios({\n      method: 'GET',\n      url: '/api/emails/history',\n      headers: {\n        authorization: `BEARER ${token}`\n      }\n    });\n    console.log(res.data);\n    if(res.data.success) {\n      setMails(res.data.emails)\n    }\n  }, [])\n\n  return (\n    <div className=\"container-fluid\">\n      <Nav/>\n      <h2 className=\"heading\">History</h2>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>To</th>\n            <th>Subject</th>\n            <th></th>\n            <th></th>\n            <th>Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {mails.map((data, index) => (\n            <tr key={index}>\n              <td><a href=\"/selectedmailhistory\"><button>{index + 1}</button></a></td>\n              <td>\n                {data.recipients.map((data, index) => (\n                  <div key={index}>{data} </div>\n                ))}\n              </td>\n              <td colSpan=\"3\">{data.subject}</td>\n              <td>{data.sentDate}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","/home/dhanesh/Documents/emaily-server/client/src/components/Home/Home.js",["79","80","81","82"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport \"./Home.css\";\nimport Nav from '../Navigationbar/Navigationbar'\n\nexport default function Home(props) {\n\n  const [mails, setMails] = useState([]);\n\n  useEffect(async () => {\n    console.log(props);\n    const res = await axios({\n      method: 'GET',\n      url: '/api/emails/scheduled',\n      headers: {\n        authorization: `BEARER ${props.token}`\n      }\n    });\n    console.log(res.data);\n    if(res.data.success) {\n      setMails(res.data.emails)\n    }\n  }, [])\n\n  //Filtering mails based on count. if count>0, then it is already sent.\n  //Only those mails are needed to be displayed\n  //const home_mail = mail.filter((data, index) => data.count == 0);\n\n  return (\n    <div className=\"container-fluid\">\n      <Nav />\n      <h2 className=\"heading\">Home</h2>\n      <Table hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>To</th>\n            <th>Subject</th>\n            <th></th>\n            <th></th>\n            <th>To be sent on</th>\n          </tr>\n        </thead>\n        <tbody>\n          {mails.map((data, index) => (\n            <tr key={index}>\n              <td><a href=\"/selectedmailhome\"><button>{index + 1}</button></a></td>\n              <td>\n                {data.recipients.map((data, index) => (\n                  <div key={index}>{data} </div>\n                ))}\n              </td>\n              <td colSpan=\"3\">{data.subject}</td>\n              <td>\n                {(() => {\n                  if (data.type == \"weekly\") {\n                    return (\n                      <div>\n                        {data.schedule.day}\n                        {\",  \"}\n                        {data.schedule.time}\n                      </div>\n                    );\n                  } else if (data.type == \"monthly\") {\n                    return (\n                      <div>\n                        {data.schedule.date}\n                        {\",  \"}\n                        {data.schedule.time}\n                      </div>\n                    );\n                  } else {\n                    return (\n                      <div>\n                        {data.schedule.date}\n                        {\"/\"}\n                        {data.schedule.month}\n                        {\",  \"}\n                        {data.schedule.time}\n                      </div>\n                    );\n                  }\n                })()}\n              </td>\n            </tr>\n            \n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n","/home/dhanesh/Documents/emaily-server/client/src/components/Home/SelectedMailHome/SelectedMailHome.js",["83","84"],"import React from \"react\";\nimport { Badge, Button } from \"react-bootstrap\";\nimport \"./SelectedMailHome.css\";\nimport Nav from '../../Navigationbar/Navigationbar'\n\nexport default function SelectedMailHome() {\n  const mail = {\n    from: \"from@gmail.com\",\n    recipients: [\"to@gmail.com\", \"cc1@gmail.com\", \"cc2@gmail.com\"],\n    subject:\n      \"Subject of the mail-Lorem Ipsum is simply dummy text of the printing and typesetting industry.\",\n    body: \"Body of mail\",\n    type: \"yearly\",\n    count: 0,\n    schedule: {\n      date: \"26\",\n      month: \"6\",\n      time: \"19:41:00\",\n    },\n  };\n  return (\n    <div className=\"container-fluid\">\n      <Nav/>\n      <div >\n        <a href=\"/home\">\n        <Button variant=\"light\" className=\"goBack\">\n          <i class=\"fas fa-long-arrow-alt-left\"></i> Go Back\n        </Button></a>\n      </div>\n\n      <div className=\"subject\">\n        <h4>{mail.subject}</h4>\n        <Badge pill bg=\"primary\" className=\"type\">\n          {mail.type}\n        </Badge>\n      </div>\n\n      <hr />\n      <div className=\"from\">\n        <h6>From: </h6>\n        {mail.from}\n      </div>\n      <br />\n      <div className=\"to\">\n        <h6>To: </h6>\n        {mail.recipients.map((data, index) => (\n          <div key={index}>{data} </div>\n        ))}\n      </div>\n      <br />\n      <div className=\"date\">\n        <h6>To Be Sent On:</h6>\n        {(() => {\n          if (mail.type == \"weekly\") {\n            return (\n              <div>\n                {mail.schedule.day}\n                {\",  \"}\n                {mail.schedule.time}\n              </div>\n            );\n          } else if (mail.type == \"monthly\") {\n            return (\n              <div>\n                {mail.schedule.date}\n                {\",  \"}\n                {mail.schedule.time}\n              </div>\n            );\n          } else {\n            return (\n              <div>\n                {mail.schedule.date}\n                {\"/\"}\n                {mail.schedule.month}\n                {\",  \"}\n                {mail.schedule.time}\n              </div>\n            );\n          }\n        })()}\n      </div>\n\n      <hr />\n      <div className=\"body\">{mail.body}</div>\n    </div>\n  );\n}\n","/home/dhanesh/Documents/emaily-server/client/src/components/Links/Links.js",["85"],"import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport History from \"../History/History\";\nimport Compose from \"../Compose/Compose\";\nimport SelectedMailHistory from \"../History/SelectedMailHistory/SelectedMailHistory\";\nimport SelectedMailHome from \"../Home/SelectedMailHome/SelectedMailHome\";\nimport AlertSuccess from \"../Compose/AlertSuccess/AlertSuccess\";\nimport AlertFailure from \"../Compose/AlertFailure/AlertFailure\";\nimport Nav from \"../Navigationbar/Navigationbar\";\nimport Login from \"../Login/Login\"\n\n\nexport default function Links(props) {\n\n  return (\n    <Router>\n      <Switch>\n        <Route\n            path=\"/\"\n            exact\n            render={(props) => <Login/>}\n        />\n        <Route\n          path=\"/home\"\n          render={(props) => <Home {...props} token={localStorage.getItem('token')} />}\n        />\n        <Route\n          path=\"/history\"\n          render={(props) => <History {...props} token={localStorage.getItem('token')} />}\n        />\n        <Route\n          path=\"/compose\"\n          exact\n          render={(props) => <Compose {...props} token={localStorage.getItem('token')} />}\n        />\n        <Route\n          path=\"/selectedmailhistory\"\n          render={(props) => <SelectedMailHistory {...props} token={localStorage.getItem('token')} />}\n        />\n        <Route\n          path=\"/selectedmailhome\"\n          render={(props) => <SelectedMailHome {...props} token={localStorage.getItem('token')} />}\n        />\n        <Route\n          path=\"/compose/alertsuccess\"\n          render={(props) => <AlertSuccess {...props} token={localStorage.getItem('token')} />}\n        />\n        <Route\n          path=\"/compose/alertfailure\"\n          render={(props) => <AlertFailure {...props} token={localStorage.getItem('token')} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n","/home/dhanesh/Documents/emaily-server/client/src/components/Profile/Profile.js",[],"/home/dhanesh/Documents/emaily-server/client/src/components/Compose/Compose.js",["86","87","88","89","90","91"],"import React , {useEffect, useState} from 'react'\nimport './Compose.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport axios from 'axios'\nimport Nav from '../Navigationbar/Navigationbar'\n\n\nexport default function Compose({token}) {\n\n    useEffect((token) => {\n        console.log('Token', token);\n    })\n\n    const [input, setinput] = useState({\n        to:'',\n        cc:[],\n        subject:'',\n        type:'',\n        mailbody:'',\n        day:'',\n        date:'',\n        month:'',\n        time: ''\n      });\n\n    const scheduleMails = async (url, schedule) => {\n\n        const options = {\n            headers: { authorization: `BEARER ${token}`}\n        };\n\n        const res = await axios.post(url, {\n                recipients: `${input.to}, ${input.cc}`,\n                subject: input.subject,\n                body: input.mailbody,\n                schedule \n            },\n            options\n        );\n\n        console.log(res);\n\n\n        if(res.data && res.data.success) {\n            console.log('Mail send success');\n            console.log(res.data);\n            window.location.assign('compose/alertsuccess')\n        } else {\n            // failure redirect\n            console.log(res);\n            window.location.assign('compose/alertfailure')\n        }\n\n        console.log(res);\n    }\n    \n     const onSubmit = (e) => {\n        console.log(input);\n        e.preventDefault();\n        {/* --- METHOD TO SEND THE MAIL --- */}\n\n        switch(input.t) {\n            case 'recurring':\n                // do the processing here\n                scheduleMails('/api/emails/recurring', { timeGap: 30 });\n                break;\n            case 'weekly':\n                return scheduleMails(\n                    '/api/emails/weekly', \n                    { \n                        day: input.day, \n                        time: input.time \n                    }\n                );\n                break;\n            case 'monthly':\n                scheduleMails(\n                    '/api/emails/monthly', \n                    { \n                        date: input.date,\n                        time: input.time \n                    }\n                );\n                break;\n            case 'yearly':\n                scheduleMails(\n                    '/api/emails/yearlyy', \n                    { \n                        month: input.month, \n                        date: input.date, \n                        time: input.time \n                    }\n                );\n                break;\n            default:\n                console.log('Select type');\n        }        \n      };\n    \n      const handleChange = (e) => {\n        setinput({ ...input, [e.target.name]: e.target.value });\n        \n      };\n    //   const handleChangecc = (e) =>{\n    //     setinput({ ...input, [e.target.name]: e.target.value.split(',').map(s => s.trim()) });\n\n    //   };\n      const s = (t) =>{\n          if(t == 'monthly'){\n              \n              \n              return(<div className=\"sch\">\n                  <div id=\"sc\">\n                  <label>Date</label>\n                    <input id=\"i\"  type=\"text\" name=\"date\" onChange={handleChange} value={input.date}></input>\n                    </div>\n                    <div id=\"sc\">\n                    <label>Time</label>\n                            <input id=\"i\"type=\"text\" name='time' onChange={handleChange} value={input.time}></input>\n                            </div>\n              </div>);}\n           if(t == 'weekly'){\n               return(\n                <div className=\"sch\">\n                    <div id=\"sc\">\n                    <label>Day</label>\n                    <input id=\"i\" type=\"text\" name='day' onChange={handleChange} value={input.day}></input>\n                    </div>\n                    <div id=\"sc\">\n                    <label>Time</label>\n                            <input id=\"i\" type=\"text\" name='time' onChange={handleChange} value={input.time}></input>               \n                    </div>\n                </div>\n               );\n           } \n           if(t=='yearly'){\n               return(\n                   <div className=\"sch\">\n                       <div id=\"sc\">\n                    <label>Date</label>\n                    <input id=\"i\" type=\"text\" name=\"date\" onChange={handleChange} value={input.date}></input>\n                    </div>\n                    <div id=\"sc\">\n                    <label>Month</label>\n                    <input id=\"i\" type=\"text\" name='month' onChange={handleChange} value={input.month}></input>\n                    </div>\n                    <div id=\"sc\">\n                    <label>Time</label>\n                            <input id=\"i\" type=\"text\" name='time' onChange={handleChange} value={input.time}></input>\n                            </div>\n                   </div>\n               )\n           }\n\n          \n      };\n    return (\n        \n\n        <div>\n            <Nav />\n            <div class=\"col-md-6 b\">\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-body message\">\n                        <p class=\"text-center\">New Message</p>\n                        <form class=\"form-horizontal\" role=\"form\">\n                            <div class=\"form-group\" className=\"input\">\n                                <label for=\"to\" class=\"col-sm-1 control-label\">To:</label>\n                                <div class=\"col-sm-11\">\n                                    <input type=\"email\" class=\"form-control select2-offscreen\" id=\"to\" placeholder=\"Type email\" tabindex=\"-1\" name=\"to\" value={input.to} onChange={handleChange}/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" className=\"input\">\n                                <label for=\"cc\" class=\"col-sm-1 control-label\">CC:</label>\n                                <div class=\"col-sm-11\">\n                                    <input type=\"email\" class=\"form-control select2-offscreen\" id=\"cc\" placeholder=\"Type email\" tabindex=\"-1\" name=\"cc\" value={input.cc}\n                            onChange={handleChange}/>\n                                </div>\n                            </div>\n                            <div class=\"form-group\" className=\"input\">\n                                <label for=\"bcc\" class=\"col-sm-1 control-label\">Sub:</label>\n                                <div class=\"col-sm-11\">\n                                    <input type=\"email\" class=\"form-control select2-offscreen\" id=\"bcc\" placeholder=\"Subject\" tabindex=\"-1\" name=\"subject\" value={input.subject}\n                            onChange={handleChange}/>\n                                </div>\n                            </div>\n                        \n                        </form>\n                        \n                        <div class=\"col-sm-11 col-sm-offset-1\">\n                            \n                            \n                            \n\n                            <div className=\"schedule\">\n                                <p>Schedule:</p>\n                            <div class=\"form-group\" id=\"w\">\n                                <select name ='t'  onChange={handleChange}  value={input.t}>\n                                <option name = 't' value=\"----\">----</option>\n                                <option name = 't' value=\"weekly\">Weekly</option>\n                                <option name = 't' value=\"monthly\">Monthly</option>\n                                <option name = 't'  value=\"yearly\">Yearly</option>\n                                <option name = 't'  value=\"recurring\">Recurring</option>\n                                </select>\n                            </div>\n                            {s(input.t)}\n                            </div>\n                        \n                            \n                            <div class=\"form-group\" className=\"mailbody\">\n                                <textarea class=\"form-control\" id=\"message\" name=\"mailbody\" rows=\"12\" placeholder=\"Click here to reply\" value={input.mailbody}\n                            onChange={handleChange}></textarea>\n                            </div>\n                            \n                            <div class=\"form-group\" className='send'>\t\n                                <button type=\"submit\" class=\"btn btn-success\" onClick={onSubmit}>Send</button>\n                                \n                            </div>\n                        </div>\t\n                </div>\t\n            </div>\t\n        </div>\n    </div>\n    )\n}\n","/home/dhanesh/Documents/emaily-server/client/src/components/Compose/AlertSuccess/AlertSuccess.js",[],"/home/dhanesh/Documents/emaily-server/client/src/components/Compose/AlertFailure/AlertFailure.js",[],{"ruleId":"92","severity":1,"message":"93","line":1,"column":27,"nodeType":"94","messageId":"95","endLine":1,"endColumn":33},{"ruleId":"92","severity":1,"message":"96","line":1,"column":35,"nodeType":"94","messageId":"95","endLine":1,"endColumn":40},{"ruleId":"92","severity":1,"message":"97","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"98","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":24},{"ruleId":"92","severity":1,"message":"99","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":21},{"ruleId":"92","severity":1,"message":"100","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":27},{"ruleId":"92","severity":1,"message":"101","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":15},{"ruleId":"92","severity":1,"message":"102","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":12},{"ruleId":"92","severity":1,"message":"103","line":8,"column":8,"nodeType":"94","messageId":"95","endLine":8,"endColumn":15},{"ruleId":"92","severity":1,"message":"104","line":9,"column":8,"nodeType":"94","messageId":"95","endLine":9,"endColumn":15},{"ruleId":"92","severity":1,"message":"105","line":10,"column":10,"nodeType":"94","messageId":"95","endLine":10,"endColumn":18},{"ruleId":"92","severity":1,"message":"106","line":13,"column":11,"nodeType":"94","messageId":"95","endLine":13,"endColumn":18},{"ruleId":"92","severity":1,"message":"107","line":26,"column":11,"nodeType":"94","messageId":"95","endLine":26,"endColumn":27},{"ruleId":"108","severity":1,"message":"109","line":11,"column":13,"nodeType":"110","endLine":23,"endColumn":4},{"ruleId":"108","severity":1,"message":"111","line":23,"column":6,"nodeType":"112","endLine":23,"endColumn":8,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"109","line":11,"column":13,"nodeType":"110","endLine":24,"endColumn":4},{"ruleId":"108","severity":1,"message":"114","line":24,"column":6,"nodeType":"112","endLine":24,"endColumn":8,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":57,"column":33,"nodeType":"118","messageId":"119","endLine":57,"endColumn":35},{"ruleId":"116","severity":1,"message":"117","line":65,"column":40,"nodeType":"118","messageId":"119","endLine":65,"endColumn":42},{"ruleId":"116","severity":1,"message":"117","line":54,"column":25,"nodeType":"118","messageId":"119","endLine":54,"endColumn":27},{"ruleId":"116","severity":1,"message":"117","line":62,"column":32,"nodeType":"118","messageId":"119","endLine":62,"endColumn":34},{"ruleId":"92","severity":1,"message":"120","line":10,"column":8,"nodeType":"94","messageId":"95","endLine":10,"endColumn":11},{"ruleId":"121","severity":1,"message":"122","line":60,"column":9,"nodeType":"123","messageId":"124","endLine":60,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":75,"column":17,"nodeType":"127","messageId":"128","endLine":75,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":109,"column":16,"nodeType":"118","messageId":"119","endLine":109,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":122,"column":17,"nodeType":"118","messageId":"119","endLine":122,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":136,"column":16,"nodeType":"118","messageId":"119","endLine":136,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":166,"column":25,"nodeType":"131","endLine":166,"endColumn":67},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Login' is defined but never used.","'SelectedMailHome' is defined but never used.","'Navigationbar' is defined but never used.","'SelectedMailHistory' is defined but never used.","'History' is defined but never used.","'Home' is defined but never used.","'Compose' is defined but never used.","'Profile' is defined but never used.","'useState' is defined but never used.","'history' is assigned a value but never used.","'handleGoogleAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["133"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Nav' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [token]",{"range":"138","text":"139"},"Update the dependencies array to be: [props]",{"range":"140","text":"141"},[565,567],"[token]",[587,589],"[props]"]